name: CI
on:
  push:
    branches:
      - main
    tags: '*'
  pull_request:
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.5'
          - '1'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      # This doesn't seem to work. Hard to debug due to the SSH server setup on
      # the test machines that we don't control?
      #
      - name: Set up passwordless SSH access for localhost
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan 127.111.111.111 >> ~/.ssh/known_hosts
          ssh-keygen -N '' -f ~/.ssh/id_rsa_remoterepl_test
          cat ~/.ssh/id_rsa_remoterepl_test.pub >> ~/.ssh/authorized_keys
          echo -e "\nHost 127.111.111.111\n  IdentityFile ~/.ssh/id_rsa_remoterepl_test" >> ~/.ssh/config
          chmod 600 ~/.ssh/*
          chmod 700 ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add ~/.ssh/id_rsa_remoterepl_test
      - name: Verify ssh config
        run: |
          ls -l ~/.ssh
          cat ~/.ssh/authorized_keys
      - name: Test ssh
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh -vvv 127.111.111.111 true
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
