name: CI
on:
  push:
    branches:
      - main
    tags: '*'
  pull_request:
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.5'
          - '1'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - name: Set up passwordless SSH access for localhost
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p $HOME/.ssh
          ssh-keyscan 127.111.111.111 >> $HOME/.ssh/known_hosts
          ssh-keygen -P '' -f $HOME/.ssh/id_rsa_remoterepl_test
          cat $HOME/.ssh/id_rsa_remoterepl_test.pub >> $HOME/.ssh/authorized_keys
          echo -e "\nHost 127.111.111.111\n  IdentityFile $HOME/.ssh/id_rsa_remoterepl_test" >> $HOME/.ssh/config
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add $HOME/.ssh/id_rsa_remoterepl_test
          ssh -vv 127.111.111.111 true
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
